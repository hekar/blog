{"pageProps":{"post":{"title":"ScalaTest Eclipse","date":"2013-10-25","slug":"2013-10-25-scala-test-eclipse","content":"<p>I tried the ScalaTest plugin Eclipse, but I couldn't get them working with my version of ScalaTest. Fortunately, there's an alternative: JUnit runners.</p>\n<hr>\n<p>Found the <a href=\"http://www.valleyprogramming.com/blog/running-scalatest-unit-tests-eclipse-junit-scala\">perfect tutorial</a> to get JUnit runners with ScalaTest working well in Eclipse.</p>\n<p>Here's an example:</p>\n<pre><code class=\"hljs language-java\"><span class=\"hljs-keyword\">import</span> org.junit.runner._\n<span class=\"hljs-keyword\">import</span> org.scalatest._\n<span class=\"hljs-keyword\">import</span> org.scalatest.junit._\n\n<span class=\"hljs-meta\">@RunWith(classOf[JUnitRunner])</span>\n  <span class=\"hljs-keyword\">class</span> <span class=\"hljs-title class_\">OneEqualOneSpec</span> <span class=\"hljs-keyword\">extends</span> <span class=\"hljs-title class_\">FunSuite</span> {\n\n    test(<span class=\"hljs-string\">\"testing 1 = 1\"</span>) {\n      <span class=\"hljs-keyword\">assert</span>(<span class=\"hljs-number\">1</span> == <span class=\"hljs-number\">1</span>)\n    }\n\n  }\n</code></pre>\n<p>This example can run under standard Java JUnit configurations in Gradle, Maven and Ant. Making it easier to integrate with existing projects.</p>"}},"__N_SSG":true}