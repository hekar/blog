{"pageProps":{"allPosts":[{"title":"Dotcover in Dotnet Core","date":"2020-09-22","slug":"2020-09-22-dotcover-dotnetcore","excerpt":"\nCode coverage can be a useful heuristic for determining whether code is adequately executed by a given set of unit tests.\n\nTooling that produces code coverage will never be able to inform you how well your assertions specified, but they will give adequate information an about whether a portion of code is executed.\n\nThere are numerous code coverage tools available for C#. One of them by Jetbrains and is called Dotcover. \n\n"},{"title":"Coding is writing","date":"2020-09-19","slug":"2020-09-19-coding-is-writing","excerpt":"\nRecently a friend asked what I do for a living. For the longest time I'd had difficulty answering this question. Somehow in that moment I realized we're similar to writers.\n\n"},{"title":"Stop Distro Hopping","date":"2019-08-30","slug":"2019-08-30-stop-distro-hopping","excerpt":"\nFrom 2005 to 2017, I hadn't been able to stick to a single installation of any Linux Desktop Distribution. Whether it was Mandrake, Debian, Slackware, Ubuntu, Fedora, SUSE, Mepis or any of the many Linux distributions I switched between. Even Windows would periodically be installed onto one of many computers.\n\nIt took until 2017 for me to settle. On OpenSUSE Tumbleweed. Why did it take so long? I would argue that it was not entirely my fault. That most Linux distributions were not stable enough. Until recently there'd been the promise of an easy to use, yet stable and up to date distribution that'd never came to fruition.\n\n"},{"title":"Electron, Vue.js and Vuetify Guide","date":"2019-08-23","slug":"2019-08-23-electron-vue","excerpt":"\nThis post is a quick tutorial on how to create an electron-vue] application with the vuetify library. The resulting application will bundles into Windows, macOS and Linux binaries.\n\n"},{"title":"Compiling Source SDK on Linux","date":"2019-08-17","slug":"2019-08-17-source-sdk-linux","excerpt":"\nThe Source SDK is a fork of Valve's internal Perforce repository containing the application code they use to build Valve's games based on the Source 1 engine. Games such as Counter Strike: Source, Team Fortress 2 and Half-Life 2.\n\n"},{"title":"QCon - No Moore Left to Give","date":"2019-08-14","slug":"2019-08-14-qcon-no-moore","excerpt":"\nBryan Cantrill is one of my favorite presenters, so I was excited to see that he'd be giving a keynote at QCon. For a long time, computer enthuasaists have been talking about the end of Moore's law and what it means for computing. What Cantrill explains is that Moore's law is close to ending, it's not the end of the world, but developers aren't going to get the \"free\" performance increases we've seen in the past.\n\n"},{"title":"Quality Code Reviews","date":"2016-09-23","slug":"2016-09-23-quality-code-reviews","excerpt":"\nCode reviews are among the most important aspect of professional software development. We spend large portions of our time doing code reviews. Because they are one of the most effective forms of ensuring cohesiveness and incrementally staying up to the date with the state of a project and system.\n\n"},{"title":"Scoped Packages with npm-link","date":"2016-04-25","slug":"2016-04-25-npm-scoped-packages","excerpt":"\nIn the past few months, I have noticed that `npm link` and scoped packages have gone underused by my colleagues.\nThe `npm link` command is essential for quick development. And if you're building private packages inside an organization, scoped packages can make managing and installing packages much simpler.\n\nBefore we can do anything, we need a scoped package. Fortunately, it's as simple as naming the package in the following format: `@<scope>/<package>`.\n\n"},{"title":"Thinkpad T520 - OpenSUSE 13.2","date":"2015-05-21","slug":"2015-05-21-opensuse-lenovo-t520","excerpt":"\nGetting a Thinkpad T520â€™s NVIDIA Quadro video card working with OpenSUSE 13.2 or other modern distributions does not have to be the hard.\n\nMany modern laptops only support video output (DVI, HDMI, Display Port) on the dedicated GPU. Fortunately, on the T520, we can easily configure Linux to use the NVIDIA video card as the primary card. Avoiding any screen tearing or other issues you're traditionally notice from the video output being copied between the integrated and dedicated graphics processors.\n\n"},{"title":"Building Zero-K Lobby on Linux","date":"2013-11-24","slug":"2013-11-24-zero-k-lobby-linux","excerpt":"\nThough, I am no longer an avid video game player I happened to come across a real-time strategy game a few months ago. The game is called Zero-K, is freely avaliable and open source. While the game runs very well under Windows, I have experienced quite a few issues under Linux.\n\nRecently, the game had stopped working altogether and I had been unsure of why.\n\n"},{"title":"ScalaTest Eclipse","date":"2013-10-25","slug":"2013-10-25-scala-test-eclipse","excerpt":"\nI tried the ScalaTest plugin Eclipse, but I couldn't get them working with my version of ScalaTest. Fortunately, there's an alternative: JUnit runners.\n\n"},{"title":"Project Lombok","date":"2013-10-07","slug":"2013-10-07-project-lombok","excerpt":"\nI happened to come across http://projectlombok.org/, which is a library that adds many C#, among other features to Java. Included are \"properties\", the \"using\" statement, \"structs\", immutable structures, checked to uncheck exceptions, delegation, basic type inference, etc. These features are utilized via annotations and implemented as modifications to javac.\n\n"},{"title":"What does this code do?","date":"2013-08-12","slug":"2013-08-12-what-does-this-code-do","excerpt":"\nSince learning Scala and Kotlin, I've been wondering why much of the code written in Kotlin and Scala has been easier to read than its respective Java equivalent.\n\n"},{"title":"Linux Complaints and Mass Market","date":"2013-07-30","slug":"2013-07-30-linux-mass-market","excerpt":"\nLinux users complain a lot about their desktop environments. Gnome, KDE, Xfce, LXDE etc. But that's not nearly the biggest issue on the Linux desktop.\n\nThe biggest issue is the complexity of packaging software and the shear work required to create a distribution.\n\n"},{"title":"Windows 8 Review","date":"2012-10-28","slug":"2012-10-28-windows-8-review","excerpt":"\nBeen using Windows 8 for a little over 3 weeks now.\n\n"},{"title":"Play 2.0 with Intellij","date":"2012-06-25","slug":"2012-06-25-scala-intellij","excerpt":"\nAfter upgrading to Windows 8, I noticed some stability issues with Eclipse Juno. Many of the problems made Juno completely unusable on my installation.\n\n"},{"title":"The Linux Desktop and Package Managers","date":"2012-06-13","slug":"2012-06-13-linux-desktop-package-managers","excerpt":"\nServer based Linux distributions are extraordinary. They're relatively secure, performant, reliable, fault tolerant and support a large variety of applications. Features of the operating systems make sense for large scale deployments. Everything from the setup of the file system to the way services are handled makes sense for a server. Organizations rarely realize limitations with their Linux distributions. They receive powerful and malleable operating systems that suite the needs of modern network service based architectures.\n\n"},{"title":"Python's Yield Keyword","date":"2012-01-12","slug":"2012-01-12-python-yield-keyword","excerpt":"\nOne of my most missed features in Java is the yield keyword found in Python.\n\nInstead of processing an entire a collection and returning it. The yield keyword, will automatically create a lazily loaded iterable out of a function. This removes a ton of boilerplate that one would otherwise need to create an iterable.\n\n"}]},"__N_SSG":true}